@page "/add-Addons"
@inject NavigationManager NavigationManager
@inject AddOnsService AddOnsServices
@inject ISnackbar Snackbar



<h1>Add Add-Ons Details</h1>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
}


<div class="container-fluid mt-5">
    <div class="row">
        <div class="col-6 d-flex flex-column gap-y-3">
            <MudTextField @bind-Value="_currentPassword" Label="Current Password" Variant="Variant.Outlined" InputType="@InputType.Password"></MudTextField>
            <MudTextField @bind-Value="_addOns" Label="Add Ons" Variant="Variant.Outlined"></MudTextField>
            <MudTextField @bind-Value="_price" Label="Price" Variant="Variant.Outlined" InputType="@InputType.Number"></MudTextField>
            <div>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowBack" Class="mt-5 mr-5" OnClick="goBack">
                    Back
                </MudButton>
                <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Class="mt-5" OnClick="AddAddOnsDetails">
                    Add Add-Ons
                </MudButton>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public string coffeeID { get; set; }

    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private string _errorMessage { get; set; } = "";
    private string _addOns { get; set; }
    private string _currentPassword { get; set; }
    private double _price { get; set; }


    protected void goBack()
    {
        NavigationManager.NavigateTo("/addons-items");
    }
    protected void AddAddOnsDetails()
    {
        try
        {
            if (String.IsNullOrEmpty(_currentPassword))
            {
                _errorMessage = "Please enter the password";
                return;
            }
            if (String.IsNullOrEmpty(_addOns))
            {
                _errorMessage = "Please enter the Add-Ons name";
                return;
            }
            if (_price <= 0)
            {
                _errorMessage = "Please enter a valid price for the Add-Ons";
                return;
            }
            if (_currentPassword != "admin")
            {
                _errorMessage = "Invalid password";
                return;
            }

            AddOnsServices.AddAddOnItem(_addOns, _price);

            _errorMessage = "";

            Snackbar.Add("Add-Ons Details is Added and stored succesfully", Severity.Success);
            goBack();
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }
}
