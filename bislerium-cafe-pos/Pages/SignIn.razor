@page "/"
@inject NavigationManager Navigation
@inject UserServices UserServices

@layout EmptyLayout

<style>
    body {
        background-color: #ffffff;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    h3 {
        color: #4a4a4a;
        text-align: center;
        margin-bottom: 25px;
    }


    button {
        width: 40%;
        padding: 10px;
        border: none;
        border-radius: 10px;
        background-color: #3f91ff;
        color: #ffffff;
        font-weight: bold;
        cursor: pointer;
        margin-left: 130px;
        margin-top: 15px;
        transition: background-color 0.2s;
    }

    button:hover {
        background-color: #2e84e1
    }
    img
    {
        margin-left: 100px;
        height: 240px;
        width:auto;
    }
    #wrapper
    {
        width: 500px;
    }
</style>



<div class="border border-light shadow-lg px-8 py-10" id="wrapper">
        <img src="/images/logo.png"/>

        <MudTextField Variant="Variant.Outlined" @bind-Value="_username" Label="User name" T="string" Class="mb-4"/>
        <MudTextField Variant="Variant.Outlined" @bind-Value="_password" Label="Password" T="string" InputType="InputType.Password" Class="mb-4"/>
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
        }
        <button class="button" @onclick="ManageSignIn">
            Login
        </button>
    </div>



@code {
    private string _username { get; set; } = "username";
    private string _password { get; set; } = "password";
    private string _role { get; set; } = "Admin";
  
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private User _currentUser { get; set; }

    private string _errorMessage = "";
    private string _successMessage = "";

    //for sigin authentication
    private void ManageSignIn()
    {
        try
        {
            if(string.IsNullOrEmpty(_password) || string.IsNullOrEmpty(_username))
            {
                _errorMessage = "Please Fill all the fields";
                return;
            }
            _currentUser = UserServices.SignInUser(_password, _username);
            _globalState.CurrentUser = _currentUser;

            Navigation.NavigateTo("/coffee");

            _username = "";
            _errorMessage = "";
            _successMessage = "Login was sucessfull.";
            _password = "";
        }
        catch (Exception a)
        {
            _errorMessage = a.Message;
            Console.WriteLine(a);
        }
    }

}
