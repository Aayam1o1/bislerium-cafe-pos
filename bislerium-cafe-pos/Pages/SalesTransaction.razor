@page "/sales-report"
@inject OrderService OrderServices
@inject IDialogService DialogService


<style>
    .table-row {
        font-size: 14px;
    }
</style>

<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped"

          HorizontalScrollbar="true"
          SortLabel="Sort By">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Sales Transactions</MudText>
        <MudSpacer />
    </ToolBarContent>
        
    <HeaderContent>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.OrderID)"> Order ID</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.CustomerName)"> Customer Name</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.CustomerPhoneNumber)"> Customer Phone Number</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.CustomerPhoneNumber)"> Ordered Item Quantity</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.OrderDateTime)"> Order DateTime</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.OrderTotalAmount)"> Order Total</MudTableSortLabel></MudTh>
        <MudTh> <MudTableSortLabel SortBy="new Func<Order, object>(x => x.DiscountAmount)"> Discount Amount</MudTableSortLabel></MudTh>
        <MudTh> Grand Total</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Order ID" Class="table-row">@context.OrderID</MudTd>
            <MudTd DataLabel="Customer Name" Class="table-row">
                <MudText Size="Size.Small">@context.CustomerName</MudText>
            </MudTd>
            <MudTd DataLabel="Phone Number" Class="table-row">@context.CustomerPhoneNumber</MudTd>
            <MudTd DataLabel="Phone Number" Class="table-row">@context.OrderItems.Count</MudTd>
        <MudTd DataLabel="DateTime" Class="table-row">@context.OrderDateTime</MudTd>
            <MudTd DataLabel="Total Amount" Class="table-row">Rs.@context.OrderTotalAmount</MudTd>
            <MudTd DataLabel="Discount Amount" Class="table-row">Rs.@context.DiscountAmount</MudTd>
            <MudTd DataLabel="Grand Total" Class="table-row">Rs.@(context.OrderTotalAmount - context.DiscountAmount)</MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
    @code {
    [CascadingParameter] private GlobalState _globalSate { get; set; }

    private List<Order> _orders { get; set; } = new();

    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
   
    
    private IEnumerable<Order> Elements = new List<Order>();

    protected override void OnInitialized()
    {
        Elements = OrderServices.GetOrdersFromJson();
        
    }

    //for filtring within table
    private bool FilterFunc(Order element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if (element.OrderID.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.CustomerName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.CustomerPhoneNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;


        if (element.OrderDateTime.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.OrderTotalAmount.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.DiscountAmount.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

}
